{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\vubale\\\\Desktop\\\\ReactJs\\\\vishal\\\\pokemon_search_app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\vubale\\\\Desktop\\\\ReactJs\\\\vishal\\\\pokemon_search_app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\vubale\\\\Desktop\\\\ReactJs\\\\vishal\\\\pokemon_search_app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\vubale\\\\Desktop\\\\ReactJs\\\\vishal\\\\pokemon_search_app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\vubale\\\\Desktop\\\\ReactJs\\\\vishal\\\\pokemon_search_app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\vubale\\\\Desktop\\\\ReactJs\\\\vishal\\\\pokemon_search_app\\\\src\\\\History\\\\History.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Table, Header, Segment, Image } from 'semantic-ui-react';\nimport Spinner from '../Spinner/Spinner';\nimport * as actionCreators from '../store/actions';\n\nvar History =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(History, _Component);\n\n  function History() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, History);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(History)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleHeadlinerChange = function (event) {\n      var inputValue = event.currentTarget.textContent;\n\n      _this.props.pokemonHistoryRecall(inputValue);\n    };\n\n    return _this;\n  }\n\n  _createClass(History, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var result = null;\n\n      if (this.props.pkmSearches.id) {\n        result = React.createElement(Segment, {\n          textAlign: \"center\",\n          font: \"Arial Black\",\n          style: {\n            width: '600px',\n            margin: '20px auto',\n            minHeight: '300px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, React.createElement(Header, {\n          style: {\n            margin: '20px auto',\n            fontSize: '1.6rem'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, this.props.pkmSearches.name.toUpperCase()), React.createElement(Image, {\n          src: this.props.pkmSearches.sprites.front_default,\n          size: \"small\",\n          floated: \"center\",\n          style: {\n            marginLeft: '200px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }));\n      } else if (!this.props.pkmSearches.id && this.props.errors) {\n        result = React.createElement(Header, {\n          style: {\n            width: '600px',\n            margin: '100px auto'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, this.props.errors);\n      }\n\n      var history = this.props.historySearches.map(function (search) {\n        return React.createElement(Table.Row, {\n          key: search.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, search.id), React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          onClick: _this2.handleHeadlinerChange,\n          style: {\n            cursor: 'pointer'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, search.name)), React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, search.types.map(function (type) {\n          return React.createElement(Table.Cell, {\n            key: type,\n            style: {\n              borderTop: 'none'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39\n            },\n            __self: this\n          }, type.type.name);\n        })), React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, search.height * 10, \" cm / \", search.weight / 10, \" kg\"));\n      });\n      return React.createElement(React.Fragment, null, React.createElement(Segment, {\n        textAlign: \"center\",\n        style: {\n          minHeight: '50vh',\n          width: '900px',\n          margin: '100px auto 0 auto'\n        },\n        vertical: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, this.props.fetching ? React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }) : result, React.createElement(Table, {\n        celled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Table.Header, {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Id\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Name\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Type\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Height/ Weight\"))))));\n    }\n  }]);\n\n  return History;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    pkmSearches: state.searchResults,\n    historySearches: state.historySearches,\n    errors: state.errors,\n    fetching: state.fetching\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    pokemonHistoryRecall: function pokemonHistoryRecall(inputValue) {\n      return dispatch(actionCreators.historyRecall(inputValue));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(History);","map":{"version":3,"sources":["C:\\Users\\vubale\\Desktop\\ReactJs\\vishal\\pokemon_search_app\\src\\History\\History.js"],"names":["React","Component","connect","Table","Header","Segment","Image","Spinner","actionCreators","History","handleHeadlinerChange","event","inputValue","currentTarget","textContent","props","pokemonHistoryRecall","result","pkmSearches","id","width","margin","minHeight","fontSize","name","toUpperCase","sprites","front_default","marginLeft","errors","history","historySearches","map","search","cursor","types","type","borderTop","height","weight","fetching","textAlign","mapStateToProps","state","searchResults","mapDispatchToProps","dispatch","historyRecall"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Table, Header, Segment, Image } from 'semantic-ui-react';\r\nimport Spinner from '../Spinner/Spinner'\r\n\r\nimport * as actionCreators from '../store/actions';\r\n\r\nclass History extends Component {\r\n\r\n    handleHeadlinerChange = (event) => {\r\n        const inputValue = event.currentTarget.textContent;\r\n        this.props.pokemonHistoryRecall(inputValue);\r\n    }\r\n\r\n    render() {\r\n        let result = null\r\n        if (this.props.pkmSearches.id) {\r\n            result = (\r\n                <Segment\r\n                    textAlign=\"center\"\r\n                    font = \"Arial Black\"\r\n                    style={{ width: '600px', margin: '20px auto', minHeight: '300px' }}\r\n                >\r\n                    <Header style={{ margin: '20px auto', fontSize: '1.6rem' }}>{this.props.pkmSearches.name.toUpperCase()}</Header>\r\n                    \r\n                    <Image src={this.props.pkmSearches.sprites.front_default} size='small' floated='center' style={{ marginLeft: '200px' }} />\r\n                </Segment>\r\n            )\r\n        } else if (!this.props.pkmSearches.id && this.props.errors) {\r\n            result = (\r\n                <Header style={{ width: '600px', margin: '100px auto' }}>{this.props.errors}</Header>\r\n            )\r\n        }\r\n        const history = this.props.historySearches.map((search => (\r\n            <Table.Row key={search.name}>\r\n                <Table.Cell>{search.id}</Table.Cell>\r\n                <Table.Cell><p onClick={this.handleHeadlinerChange} style={{ cursor: 'pointer' }}>{search.name}</p></Table.Cell>\r\n                <Table.Cell>{\r\n                    search.types.map((type => <Table.Cell key={type} style={{ borderTop: 'none' }}>{type.type.name}</Table.Cell>))\r\n                }</Table.Cell>\r\n                <Table.Cell>{search.height * 10} cm / {search.weight / 10} kg</Table.Cell>\r\n            </Table.Row>\r\n\r\n        )))\r\n        return (\r\n            <>\r\n                <Segment\r\n                    textAlign=\"center\"\r\n                    style={{ minHeight: '50vh', width: '900px', margin: '100px auto 0 auto' }}\r\n                    vertical\r\n                >\r\n\r\n                    {this.props.fetching ? <Spinner /> : result}\r\n\r\n                \r\n                    <Table celled>\r\n                        <Table.Header style={{ textAlign: 'center' }}>\r\n                            <Table.Row>\r\n                                <Table.HeaderCell>Id</Table.HeaderCell>\r\n                                <Table.HeaderCell>Name</Table.HeaderCell>\r\n                                <Table.HeaderCell>Type</Table.HeaderCell>\r\n                                <Table.HeaderCell>Height/ Weight</Table.HeaderCell>\r\n                            </Table.Row>\r\n                        </Table.Header>\r\n                    \r\n                    </Table>\r\n                </Segment>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        pkmSearches: state.searchResults,\r\n        historySearches: state.historySearches,\r\n        errors: state.errors,\r\n        fetching: state.fetching\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        pokemonHistoryRecall: (inputValue) => dispatch(actionCreators.historyRecall(inputValue)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(History)\r\n"]},"metadata":{},"sourceType":"module"}