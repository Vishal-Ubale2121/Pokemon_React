{"ast":null,"code":"import fetch from 'node-fetch';\nexport var SEARCH_REQUEST = 'SEARCH_REQUEST';\nexport var SEARCH_SUCCESS = 'SEARCH_SUCCESS';\nexport var SEARCH_ERROR = 'SEARCH_ERROR';\nexport var INPUT_SEARCH = 'INPUT_SEARCH';\nexport var RANDOM_SEARCH = 'RANDOM_SEARCH';\nexport var HISTORY_SUCCESS = 'HISTORY_SUCCESS';\nvar API = \"https://pokeapi.co/api/v2/pokemon/\";\nexport var searchRequest = function searchRequest() {\n  return {\n    type: SEARCH_REQUEST\n  };\n};\nexport var searchSuccess = function searchSuccess(results) {\n  return {\n    type: SEARCH_SUCCESS,\n    results: results\n  };\n};\nexport var searchError = function searchError(errors) {\n  return {\n    type: SEARCH_ERROR,\n    errors: errors\n  };\n};\nexport var historySuccess = function historySuccess(results) {\n  return {\n    type: HISTORY_SUCCESS,\n    results: results\n  };\n};\nexport var inputSearch = function inputSearch(inputValue) {\n  return function (dispatch) {\n    dispatch(searchRequest());\n    fetch(API + \"\".concat(inputValue)).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      return dispatch(searchSuccess(data));\n    }).catch(function (err) {\n      return dispatch(searchError(\"Either this pokemon doesn't exist or the API died :(\"));\n    });\n  };\n};\nexport var randomSearch = function randomSearch(randomValue) {\n  return function (dispatch) {\n    dispatch(searchRequest());\n    fetch(API + \"\".concat(randomValue)).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      return dispatch(searchSuccess(data));\n    }).catch(function (err) {\n      return dispatch(searchError(\"Something went wrong\"));\n    });\n  };\n};\nexport var historyRecall = function historyRecall(inputValue) {\n  return function (dispatch) {\n    dispatch(searchRequest());\n    fetch(API + \"\".concat(inputValue)).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      return dispatch(historySuccess(data));\n    }).catch(function (err) {\n      return dispatch(searchError(\"Something went wrong\"));\n    });\n  };\n};","map":{"version":3,"sources":["C:\\Users\\vubale\\Desktop\\ReactJs\\vishal\\pokemon_search_app\\src\\store\\actions.js"],"names":["fetch","SEARCH_REQUEST","SEARCH_SUCCESS","SEARCH_ERROR","INPUT_SEARCH","RANDOM_SEARCH","HISTORY_SUCCESS","API","searchRequest","type","searchSuccess","results","searchError","errors","historySuccess","inputSearch","inputValue","dispatch","then","res","json","data","catch","err","randomSearch","randomValue","historyRecall"],"mappings":"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","sourcesContent":["import fetch from 'node-fetch';\r\n\r\nexport const SEARCH_REQUEST = 'SEARCH_REQUEST';\r\nexport const SEARCH_SUCCESS = 'SEARCH_SUCCESS';\r\nexport const SEARCH_ERROR = 'SEARCH_ERROR';\r\nexport const INPUT_SEARCH = 'INPUT_SEARCH';\r\nexport const RANDOM_SEARCH = 'RANDOM_SEARCH';\r\nexport const HISTORY_SUCCESS = 'HISTORY_SUCCESS';\r\n\r\nconst API = \"https://pokeapi.co/api/v2/pokemon/\";\r\n\r\nexport const searchRequest = () => ({ type: SEARCH_REQUEST });\r\n\r\nexport const searchSuccess = results => ({ type: SEARCH_SUCCESS, results });\r\n\r\nexport const searchError = errors => ({ type: SEARCH_ERROR, errors });\r\n\r\nexport const historySuccess = results => ({ type: HISTORY_SUCCESS, results });\r\n\r\nexport const inputSearch = (inputValue) => {\r\n    return dispatch => {\r\n        dispatch(searchRequest());\r\n        fetch(API + `${inputValue}`)\r\n            .then(res => res.json())\r\n            .then(data => { return dispatch(searchSuccess(data)) })\r\n            .catch(err => {\r\n                return dispatch(searchError(`Either this pokemon doesn't exist or the API died :(`))\r\n            })\r\n    }\r\n}\r\n\r\nexport const randomSearch = (randomValue) => {\r\n    return dispatch => {\r\n        dispatch(searchRequest());\r\n        fetch(API + `${randomValue}`)\r\n            .then(res => res.json())\r\n            .then(data => { return dispatch(searchSuccess(data)) })\r\n            .catch(err => {\r\n                return dispatch(searchError(`Something went wrong`))\r\n            })\r\n    }\r\n}\r\n\r\nexport const historyRecall = (inputValue) => {\r\n    return dispatch => {\r\n        dispatch(searchRequest());\r\n        fetch(API + `${inputValue}`)\r\n            .then(res => res.json())\r\n            .then(data => { return dispatch(historySuccess(data)) })\r\n            .catch(err => {\r\n                return dispatch(searchError(`Something went wrong`))\r\n            })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}